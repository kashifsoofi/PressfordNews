@using PressfordNews.Model
@{
    ViewBag.Title = "Articles";
    var user = Session["CurrentUser"] as AppUser;
}

<div class="col-md-12">
    <h1>
        @if (ViewBag.MostRecent)
        {
            <span>Most Recent Articles</span>
        }
        else
        {
            <span>Top Rated Articles</span>
        }

        @if (user.Role == Role.Publisher)
        {
            @Html.ActionLink("Publish New Article", "Publish", new { }, new { @class = "btn btn-primary pull-right" })
        }
    </h1>
    <div>
        @if (ViewBag.MostRecent)
        {
            @Html.ActionLink("Top Rated", "TopRated", new { }, new { @class = "badge pull-right", @style = "margin-top: -8px;" })
        }
        else
        {
            @Html.ActionLink("Most Recent", "Index", new { }, new { @class = "badge pull-right", @style = "margin-top: -8px;" })
        }
        <hr />
    </div>
    @foreach (Article item in Model)
    {
        <article>
            <div class="article-title">@item.Title</div>
            <div class="article-subtitle">
                @item.Publisher.FullName<span style="font-weight: bold"> · </span>@item.PublishDate.ToString("MMMM dd, yyyy hh:mm tt")
            </div>
            <div class="article-body">
                @Html.Raw(item.Body)
            </div>
            <hr />
            <div class="article-actions">
                @if (item.Likes.Any())
                {
                    <span>@string.Format("{0} Like{1}", item.Likes.Count, item.Likes.Count == 1 ? "" : "s")</span>
                    <span style="font-weight: bold"> · </span>
                }

                @if (item.Likes.Any(x => x.LikedById == user.UserId))
                {
                    <span>Liked</span>
                }
                else
                {
                    <a onclick="fnLikeArticle(@item.ArticleId)">Like</a>
                }               
                <span style="font-weight: bold"> · </span>
                <a data-toggle="collapse" href="@string.Format("#commentContainer{0}", item.ArticleId)" aria-expanded="false" aria-controls="@string.Format("commentContainer{0}", item.ArticleId)">
                    Comment
                </a>
                @* Put following for publisher role only *@
                @if (user.Role == Role.Publisher)
                {
                    <span style="font-weight: bold"> · </span>
                    @Html.ActionLink("Update", "Edit", new { id = item.ArticleId })
                    <span style="font-weight: bold"> · </span>
                    @Html.ActionLink("Delete", "Delete", new { id = item.ArticleId, onclick = "return confirm('Are you sure you want to delete this article?');" })
                }
            </div>
            <div class="collapse" id="@string.Format("commentContainer{0}", item.ArticleId)" style="margin-bottom: 4px;">
                @using (Html.BeginForm("Comment", "Articles", FormMethod.Post, new { id = "commentForm" + item.ArticleId.ToString() }))
                {
                    @Html.AntiForgeryToken()

                    <input type="hidden" name="ArticleId" value="@item.ArticleId" />
                    <div class="form-group">
                        <textarea name="Comment" id="Comment" class="form-control" rows="3" required placeholder="Write a comment..."></textarea>
                    </div>
                    <a class="btn btn-default" href="javascript:document.getElementById('@string.Format("commentForm{0}", item.ArticleId)').submit()">Add</a>
                }
            </div>
            @foreach (var comment in item.Comments)
            {
                <div class="article-comment">
                    @Html.Raw(comment.CommentText)
                </div>
            }
        </article>
    }
</div>

<script type="text/javascript">
    function fnLikeArticle(articleId) {
        var url = '/api/articles/like/' + articleId;
        $.ajax({
            url: url,
            type: 'POST',
            dataType: 'json',
            success: function (data) {
                location.reload();
            },
            error: function (data) {
            }
        });
    }
</script>